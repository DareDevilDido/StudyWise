{
    "long_summary": "- Threads are units of CPU utilization with thread ID, program counter, register set, and stack.\n- Threads in the same process share code and resources.\n- Multithreading enables multiple sections of a program to run simultaneously.\n- Benefits of multithreading in OS: responsiveness, resource sharing, economy, scalability.\n- Multicore programming for efficient use of multicore systems with concurrent execution.\n- Two main thread support models: user threads (at user level) and kernel threads (managed by the OS).\n- Three common thread relationship models: one-to-one, many-to-one, many-to-many.\n- One-to-one model (Linux, Windows) maps user thread to a kernel thread for parallel execution.\n- Many-to-One model maps many user threads to a single kernel thread.\n- Many-to-Many model maps many user threads to many kernel threads for parallel execution and efficient blocking system calls.\n- Two-level model allows a user thread to be bound to a kernel thread."
}